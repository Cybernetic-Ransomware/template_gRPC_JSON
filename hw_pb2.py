# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hw.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x08hw.proto\x12\nhelloworld\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\" \n\rHelloResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"<\n\x0bJsonRequest\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"4\n\x0bJsonMessage\x12%\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x17.google.protobuf.Struct2\x8e\x01\n\x07Greeter\x12\x41\n\x08SayHello\x12\x18.helloworld.HelloRequest\x1a\x19.helloworld.HelloResponse\"\x00\x12@\n\nReturnJson\x12\x17.helloworld.JsonRequest\x1a\x17.helloworld.JsonMessage\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'hw_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HELLOREQUEST']._serialized_start=87
  _globals['_HELLOREQUEST']._serialized_end=115
  _globals['_HELLORESPONSE']._serialized_start=117
  _globals['_HELLORESPONSE']._serialized_end=149
  _globals['_JSONREQUEST']._serialized_start=151
  _globals['_JSONREQUEST']._serialized_end=211
  _globals['_JSONMESSAGE']._serialized_start=213
  _globals['_JSONMESSAGE']._serialized_end=265
  _globals['_GREETER']._serialized_start=268
  _globals['_GREETER']._serialized_end=410
# @@protoc_insertion_point(module_scope)
